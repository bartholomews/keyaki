image: docker:19.03.1

variables:
  # When using dind service, we need to instruct docker, to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. docker:19.03.1 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03.1/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  #
  # Note that if you're using the Kubernetes executor, the variable
  # should be set to tcp://localhost:2376/ because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2376/
  #
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  # Specify to Docker where to create the certificates, Docker will
  # create them automatically on boot, and will create
  # `/certs/client` that will be shared between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:19.03.1-dind

before_script:
  - docker info

stages:
  - build
  - test
  - deploy

build-frontend:
#  image: node:11.15.0
  stage: build
  services:
    - node:11.15.0
  before_script:
    - cd client
    - yarn install
#    # Install yarn as outlined in (https://yarnpkg.com/lang/en/docs/install/#alternatives-stable)
#    - curl -o- -L https://yarnpkg.com/install.sh | bash
#    # Make available in the current terminal
#    - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_
  cache:
    paths:
      - client/node_modules/
      - client/.yarn
  script:
    - yarn run prod
    - ls

build-backend:
  stage: build
  dependencies:
    - build-frontend
  script:
    - docker build -t keyaki --target build-prod .